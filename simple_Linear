import pandas as pd
from sklearn.linear_model import LinearRegression                                           
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error


#read the imported csv    
housePrices = pd.read_csv('housePrices')      


#hinati yung column for features and predictions, double bracket for selecting column
X = [['age', 'area', 'bedrooms']] 
y = ['price']

#inistate kung alin ang data for testin and training, test is 20% of the data, random state is the shuffle of which is training and which is testing, pag wala ito paiba iba yung test data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

#dito na yung actual training ng data,  the model tries to find the line or decision boundary that minimizes the error (MSE).
model = LinearRegression()
model.fit(X_train, y_train)

#ineevaluate kung gaano kalayo yung actual and predicted value
y_pred = model.predict(X_test)
mse = mean_squared_error(y_pred, y_test)
print(f"mse is {mse:.2f}")


actual prediction, double brakcet kasi gagawa bago dataframe(rows)
pricePred = pd.DataFrame([[1,2,3]], columns = ['age', 'area', 'bedrooms'])
predicted_value = model.predict(pricePred)
print(f'priice predicted {predicted_value[0]:.2f}')
